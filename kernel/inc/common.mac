%macro SWITCH 1
%push switch
%assign __curr 1
  mov eax, %1
  jmp %$loc(__curr)
%endmacro

%macro CASE 1
%ifctx switch
  %$loc(__curr):
%assign __curr __curr+1
  mov ebx, %1
  cmp eax, ebx
  jne %$loc(__curr)
%endif
%endmacro

%macro DEFAULT 0
%ifctx switch
  %$loc(__curr):
%endif
%endmacro

%macro BREAK 0
  jmp %$endswitch
%endmacro

%macro ENDSWITCH 0
%ifctx switch
  %$endswitch:
%pop
%endif
%endmacro

%define EQUAL       e
%define NOTEQUAL    ne
%define G-THAN      g
%define L-THAN      l
%define G-THAN-EQ   ge
%define L-THAN-EQ   le
%define ZERO        z
%DEFINE NOTZERO     nz

%macro IF 3
%push if
%assign __curr 1
  mov eax, %1
  mov ebx, %3
  cmp eax, ebx
  j%+2 %%if_code
  jmp %$loc(__curr)
  %%if_code:
%endmacro

%macro ELSIF 3
%ifctx if
  jmp %$end_if
  %$loc(__curr):
%assign __curr __curr+1
  mov eax, %1
  mov ebx, %3
  cmp eax, ebx
  j%+2 %%elsif_code
  jmp %$loc(__curr)
  %%elsif_code:
%else
%error "'ELSIF' can only be used following 'IF'"
%endif
%endmacro

%macro ELSE 0
%ifctx if
  jmp %$end_if
  %$loc(__curr):
%assign __curr __curr+1
%else
%error "'ELSE' can only be used following an 'IF'"
%endif
%endmacro

%macro ENDIF 0
  %$loc(__curr):
  %$end_if:
%pop
%endmacro

